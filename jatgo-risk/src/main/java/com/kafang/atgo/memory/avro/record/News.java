/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.kafang.atgo.memory.avro.record;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class News extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6560776265818394308L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"News\",\"namespace\":\"com.kafang.atgo.memory.avro.record\",\"fields\":[{\"name\":\"sendingTime\",\"type\":\"long\"},{\"name\":\"urgency\",\"type\":\"int\"},{\"name\":\"headline\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"text\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<News> ENCODER =
      new BinaryMessageEncoder<News>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<News> DECODER =
      new BinaryMessageDecoder<News>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<News> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<News> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<News>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this News to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a News from a ByteBuffer. */
  public static News fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private long sendingTime;
   private int urgency;
   private java.lang.String headline;
   private java.lang.String text;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public News() {}

  /**
   * All-args constructor.
   * @param sendingTime The new value for sendingTime
   * @param urgency The new value for urgency
   * @param headline The new value for headline
   * @param text The new value for text
   */
  public News(java.lang.Long sendingTime, java.lang.Integer urgency, java.lang.String headline, java.lang.String text) {
    this.sendingTime = sendingTime;
    this.urgency = urgency;
    this.headline = headline;
    this.text = text;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return sendingTime;
    case 1: return urgency;
    case 2: return headline;
    case 3: return text;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: sendingTime = (java.lang.Long)value$; break;
    case 1: urgency = (java.lang.Integer)value$; break;
    case 2: headline = (java.lang.String)value$; break;
    case 3: text = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'sendingTime' field.
   * @return The value of the 'sendingTime' field.
   */
  public java.lang.Long getSendingTime() {
    return sendingTime;
  }

  /**
   * Sets the value of the 'sendingTime' field.
   * @param value the value to set.
   */
  public com.kafang.atgo.memory.avro.record.News setSendingTime(java.lang.Long value) {
    this.sendingTime = value;
	return this;
  }

  /**
   * Gets the value of the 'urgency' field.
   * @return The value of the 'urgency' field.
   */
  public java.lang.Integer getUrgency() {
    return urgency;
  }

  /**
   * Sets the value of the 'urgency' field.
   * @param value the value to set.
   */
  public com.kafang.atgo.memory.avro.record.News setUrgency(java.lang.Integer value) {
    this.urgency = value;
	return this;
  }

  /**
   * Gets the value of the 'headline' field.
   * @return The value of the 'headline' field.
   */
  public java.lang.String getHeadline() {
    return headline;
  }

  /**
   * Sets the value of the 'headline' field.
   * @param value the value to set.
   */
  public com.kafang.atgo.memory.avro.record.News setHeadline(java.lang.String value) {
    this.headline = value;
	return this;
  }

  /**
   * Gets the value of the 'text' field.
   * @return The value of the 'text' field.
   */
  public java.lang.String getText() {
    return text;
  }

  /**
   * Sets the value of the 'text' field.
   * @param value the value to set.
   */
  public com.kafang.atgo.memory.avro.record.News setText(java.lang.String value) {
    this.text = value;
	return this;
  }

  /**
   * Creates a new News RecordBuilder.
   * @return A new News RecordBuilder
   */
  public static com.kafang.atgo.memory.avro.record.News.Builder newBuilder() {
    return new com.kafang.atgo.memory.avro.record.News.Builder();
  }

  /**
   * Creates a new News RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new News RecordBuilder
   */
  public static com.kafang.atgo.memory.avro.record.News.Builder newBuilder(com.kafang.atgo.memory.avro.record.News.Builder other) {
    return new com.kafang.atgo.memory.avro.record.News.Builder(other);
  }

  /**
   * Creates a new News RecordBuilder by copying an existing News instance.
   * @param other The existing instance to copy.
   * @return A new News RecordBuilder
   */
  public static com.kafang.atgo.memory.avro.record.News.Builder newBuilder(com.kafang.atgo.memory.avro.record.News other) {
    return new com.kafang.atgo.memory.avro.record.News.Builder(other);
  }

  /**
   * RecordBuilder for News instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<News>
    implements org.apache.avro.data.RecordBuilder<News> {

    private long sendingTime;
    private int urgency;
    private java.lang.String headline;
    private java.lang.String text;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.kafang.atgo.memory.avro.record.News.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.sendingTime)) {
        this.sendingTime = data().deepCopy(fields()[0].schema(), other.sendingTime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.urgency)) {
        this.urgency = data().deepCopy(fields()[1].schema(), other.urgency);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.headline)) {
        this.headline = data().deepCopy(fields()[2].schema(), other.headline);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.text)) {
        this.text = data().deepCopy(fields()[3].schema(), other.text);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing News instance
     * @param other The existing instance to copy.
     */
    private Builder(com.kafang.atgo.memory.avro.record.News other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.sendingTime)) {
        this.sendingTime = data().deepCopy(fields()[0].schema(), other.sendingTime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.urgency)) {
        this.urgency = data().deepCopy(fields()[1].schema(), other.urgency);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.headline)) {
        this.headline = data().deepCopy(fields()[2].schema(), other.headline);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.text)) {
        this.text = data().deepCopy(fields()[3].schema(), other.text);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'sendingTime' field.
      * @return The value.
      */
    public java.lang.Long getSendingTime() {
      return sendingTime;
    }

    /**
      * Sets the value of the 'sendingTime' field.
      * @param value The value of 'sendingTime'.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.News.Builder setSendingTime(long value) {
      validate(fields()[0], value);
      this.sendingTime = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'sendingTime' field has been set.
      * @return True if the 'sendingTime' field has been set, false otherwise.
      */
    public boolean hasSendingTime() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'sendingTime' field.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.News.Builder clearSendingTime() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'urgency' field.
      * @return The value.
      */
    public java.lang.Integer getUrgency() {
      return urgency;
    }

    /**
      * Sets the value of the 'urgency' field.
      * @param value The value of 'urgency'.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.News.Builder setUrgency(int value) {
      validate(fields()[1], value);
      this.urgency = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'urgency' field has been set.
      * @return True if the 'urgency' field has been set, false otherwise.
      */
    public boolean hasUrgency() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'urgency' field.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.News.Builder clearUrgency() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'headline' field.
      * @return The value.
      */
    public java.lang.String getHeadline() {
      return headline;
    }

    /**
      * Sets the value of the 'headline' field.
      * @param value The value of 'headline'.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.News.Builder setHeadline(java.lang.String value) {
      validate(fields()[2], value);
      this.headline = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'headline' field has been set.
      * @return True if the 'headline' field has been set, false otherwise.
      */
    public boolean hasHeadline() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'headline' field.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.News.Builder clearHeadline() {
      headline = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'text' field.
      * @return The value.
      */
    public java.lang.String getText() {
      return text;
    }

    /**
      * Sets the value of the 'text' field.
      * @param value The value of 'text'.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.News.Builder setText(java.lang.String value) {
      validate(fields()[3], value);
      this.text = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'text' field has been set.
      * @return True if the 'text' field has been set, false otherwise.
      */
    public boolean hasText() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'text' field.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.News.Builder clearText() {
      text = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public News build() {
      try {
        News record = new News();
        record.sendingTime = fieldSetFlags()[0] ? this.sendingTime : (java.lang.Long) defaultValue(fields()[0]);
        record.urgency = fieldSetFlags()[1] ? this.urgency : (java.lang.Integer) defaultValue(fields()[1]);
        record.headline = fieldSetFlags()[2] ? this.headline : (java.lang.String) defaultValue(fields()[2]);
        record.text = fieldSetFlags()[3] ? this.text : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<News>
    WRITER$ = (org.apache.avro.io.DatumWriter<News>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<News>
    READER$ = (org.apache.avro.io.DatumReader<News>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
