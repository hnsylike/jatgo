/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.kafang.atgo.memory.avro.record;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Param extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8205726329998178150L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Param\",\"namespace\":\"com.kafang.atgo.memory.avro.record\",\"fields\":[{\"name\":\"strategyId\",\"type\":\"int\"},{\"name\":\"accountId\",\"type\":\"int\"},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"type\",\"type\":\"int\"},{\"name\":\"value\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Param> ENCODER =
      new BinaryMessageEncoder<Param>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Param> DECODER =
      new BinaryMessageDecoder<Param>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Param> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Param> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Param>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Param to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Param from a ByteBuffer. */
  public static Param fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private int strategyId;
   private int accountId;
   private java.lang.String name;
   private int type;
   private java.lang.String value;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Param() {}

  /**
   * All-args constructor.
   * @param strategyId The new value for strategyId
   * @param accountId The new value for accountId
   * @param name The new value for name
   * @param type The new value for type
   * @param value The new value for value
   */
  public Param(java.lang.Integer strategyId, java.lang.Integer accountId, java.lang.String name, java.lang.Integer type, java.lang.String value) {
    this.strategyId = strategyId;
    this.accountId = accountId;
    this.name = name;
    this.type = type;
    this.value = value;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return strategyId;
    case 1: return accountId;
    case 2: return name;
    case 3: return type;
    case 4: return value;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: strategyId = (java.lang.Integer)value$; break;
    case 1: accountId = (java.lang.Integer)value$; break;
    case 2: name = (java.lang.String)value$; break;
    case 3: type = (java.lang.Integer)value$; break;
    case 4: value = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'strategyId' field.
   * @return The value of the 'strategyId' field.
   */
  public java.lang.Integer getStrategyId() {
    return strategyId;
  }

  /**
   * Sets the value of the 'strategyId' field.
   * @param value the value to set.
   */
  public com.kafang.atgo.memory.avro.record.Param setStrategyId(java.lang.Integer value) {
    this.strategyId = value;
	return this;
  }

  /**
   * Gets the value of the 'accountId' field.
   * @return The value of the 'accountId' field.
   */
  public java.lang.Integer getAccountId() {
    return accountId;
  }

  /**
   * Sets the value of the 'accountId' field.
   * @param value the value to set.
   */
  public com.kafang.atgo.memory.avro.record.Param setAccountId(java.lang.Integer value) {
    this.accountId = value;
	return this;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public com.kafang.atgo.memory.avro.record.Param setName(java.lang.String value) {
    this.name = value;
	return this;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.Integer getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public com.kafang.atgo.memory.avro.record.Param setType(java.lang.Integer value) {
    this.type = value;
	return this;
  }

  /**
   * Gets the value of the 'value' field.
   * @return The value of the 'value' field.
   */
  public java.lang.String getValue() {
    return value;
  }

  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public com.kafang.atgo.memory.avro.record.Param setValue(java.lang.String value) {
    this.value = value;
	return this;
  }

  /**
   * Creates a new Param RecordBuilder.
   * @return A new Param RecordBuilder
   */
  public static com.kafang.atgo.memory.avro.record.Param.Builder newBuilder() {
    return new com.kafang.atgo.memory.avro.record.Param.Builder();
  }

  /**
   * Creates a new Param RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Param RecordBuilder
   */
  public static com.kafang.atgo.memory.avro.record.Param.Builder newBuilder(com.kafang.atgo.memory.avro.record.Param.Builder other) {
    return new com.kafang.atgo.memory.avro.record.Param.Builder(other);
  }

  /**
   * Creates a new Param RecordBuilder by copying an existing Param instance.
   * @param other The existing instance to copy.
   * @return A new Param RecordBuilder
   */
  public static com.kafang.atgo.memory.avro.record.Param.Builder newBuilder(com.kafang.atgo.memory.avro.record.Param other) {
    return new com.kafang.atgo.memory.avro.record.Param.Builder(other);
  }

  /**
   * RecordBuilder for Param instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Param>
    implements org.apache.avro.data.RecordBuilder<Param> {

    private int strategyId;
    private int accountId;
    private java.lang.String name;
    private int type;
    private java.lang.String value;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.kafang.atgo.memory.avro.record.Param.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.strategyId)) {
        this.strategyId = data().deepCopy(fields()[0].schema(), other.strategyId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.accountId)) {
        this.accountId = data().deepCopy(fields()[1].schema(), other.accountId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.value)) {
        this.value = data().deepCopy(fields()[4].schema(), other.value);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Param instance
     * @param other The existing instance to copy.
     */
    private Builder(com.kafang.atgo.memory.avro.record.Param other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.strategyId)) {
        this.strategyId = data().deepCopy(fields()[0].schema(), other.strategyId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.accountId)) {
        this.accountId = data().deepCopy(fields()[1].schema(), other.accountId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.value)) {
        this.value = data().deepCopy(fields()[4].schema(), other.value);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'strategyId' field.
      * @return The value.
      */
    public java.lang.Integer getStrategyId() {
      return strategyId;
    }

    /**
      * Sets the value of the 'strategyId' field.
      * @param value The value of 'strategyId'.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.Param.Builder setStrategyId(int value) {
      validate(fields()[0], value);
      this.strategyId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'strategyId' field has been set.
      * @return True if the 'strategyId' field has been set, false otherwise.
      */
    public boolean hasStrategyId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'strategyId' field.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.Param.Builder clearStrategyId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'accountId' field.
      * @return The value.
      */
    public java.lang.Integer getAccountId() {
      return accountId;
    }

    /**
      * Sets the value of the 'accountId' field.
      * @param value The value of 'accountId'.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.Param.Builder setAccountId(int value) {
      validate(fields()[1], value);
      this.accountId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'accountId' field has been set.
      * @return True if the 'accountId' field has been set, false otherwise.
      */
    public boolean hasAccountId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'accountId' field.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.Param.Builder clearAccountId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.Param.Builder setName(java.lang.String value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.Param.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.Integer getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.Param.Builder setType(int value) {
      validate(fields()[3], value);
      this.type = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.Param.Builder clearType() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * @return The value.
      */
    public java.lang.String getValue() {
      return value;
    }

    /**
      * Sets the value of the 'value' field.
      * @param value The value of 'value'.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.Param.Builder setValue(java.lang.String value) {
      validate(fields()[4], value);
      this.value = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'value' field has been set.
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'value' field.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.Param.Builder clearValue() {
      value = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Param build() {
      try {
        Param record = new Param();
        record.strategyId = fieldSetFlags()[0] ? this.strategyId : (java.lang.Integer) defaultValue(fields()[0]);
        record.accountId = fieldSetFlags()[1] ? this.accountId : (java.lang.Integer) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.String) defaultValue(fields()[2]);
        record.type = fieldSetFlags()[3] ? this.type : (java.lang.Integer) defaultValue(fields()[3]);
        record.value = fieldSetFlags()[4] ? this.value : (java.lang.String) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Param>
    WRITER$ = (org.apache.avro.io.DatumWriter<Param>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Param>
    READER$ = (org.apache.avro.io.DatumReader<Param>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
