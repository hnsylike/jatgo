package com.kafang.atgo.restful.service.impl;


import com.kafang.atgo.persistence.db.dao.api.AgAccountDao;
import com.kafang.atgo.persistence.db.entity.AgAccount;
import com.kafang.atgo.restful.dao.api.*;
import com.kafang.atgo.restful.entity.*;
import com.kafang.atgo.restful.service.api.AgCustomerService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Collections;
import java.util.List;
import java.util.Optional;

@Service
public class AgCustomerServiceImpl implements AgCustomerService {
	@Autowired
	private WsUserCustomerMpDao wcDao;

	@Autowired
	private AgCustomerDao wsDao;

	@Autowired
	private WsUserDao wsUserDao;

	@Autowired
	private WsPhoenDao wsPhoneDao;

	@Autowired
	private AgClientDao clientDao;

	@Autowired
	private AgAccountDao accountDao;
	
	@Override
	public AgCustomer getId(int customerId) {
		return wsDao.selectById(customerId).orElse(null);
	}

	@Override
	public List<AgCustomer> getAll() {
		return wsDao.selectAll().orElse(Collections.emptyList());
	}

	@Override
	public int insert(AgCustomer ac) {
		return wsDao.insert(ac);
	}

	@Override
	public List<AgCustomer> getCustomerName(String customerName) {
		return wsDao.selectByCustomerName(customerName).orElse(Collections.emptyList());
	}
	
	@Override
	public AgCustomer selectByCustomerName(String customerName) {
		return wsDao.selectByCustomer(customerName).orElse(null);
	}

	@Override
	public String selectCustomerId() {
		return wsDao.selectCustomerId();
	}

	@Override
	public int delCustomerUser(int userId) {
		Optional<WsUserCustomerMp> wcm=wcDao.selectByUserId(userId);
		if(!wcm.isPresent()) {
			return 0;
		}
		WsUserCustomerMp wcmp=wcm.get();
		Optional<WsUser> wu=wsUserDao.selectByUserId(userId);
		if (!wu.isPresent()){
			return 0;
		}
		WsUser wsu=wu.get();
		Optional<WsPhone> wp=wsPhoneDao.selectByUserId(userId);
		if(!wp.isPresent()) {
			return 0;
		}
		WsPhone wsphone=wp.get();
		wsPhoneDao.del(wsphone.getId());
		wsUserDao.del(wsu.getId());
		return wcDao.del(wcmp.getId());
	}

	@Override
	public int delClient(int id) {
		Optional<AgClient> aclient=clientDao.selectById(id);
		AgClient agc=aclient.get();
		Optional<AgAccount> aga=accountDao.selectByClient(agc.getClientID());
		AgAccount acc=aga.get();
		accountDao.del(acc.getId());
		return clientDao.del(agc.getId());
	}

	public int delCustomer(int id) {
		Optional<AgCustomer> opt=wsDao.selectId(id);
		if (!opt.isPresent()){
			return 0;
		}
		AgCustomer ac=opt.get();
		/*Optional<WsUserCustomerMp> wcm=wcDao.selectById(ac.getCustomerID());
		if(!wcm.isPresent()){
			return 0;
		}
		WsUserCustomerMp wcmp=wcm.get();
		Optional<WsUser> wu=wsUserDao.selectByUserId(wcmp.getUserID());
		if(!wu.isPresent()){
			return 0;
		}
		WsUser wsu=wu.get();
		Optional<WsPhone> wp=wsPhoneDao.selectByUserId(wsu.getUserid());
		if(!wp.isPresent()){
			return 0;
		}
		WsPhone wsphone=wp.get();*/
		/* 删除机构下所有用户和账户前端传id
		Optional<WsUserCustomerMp> wcm=wcDao.selectById(ac.getCustomerID());
		if(!wcm.isPresent()){
			return 0;
		}
		WsUserCustomerMp wcmp=wcm.get();
		Optional<WsUser> wu=wsUserDao.selectByUserId(wcmp.getUserID());
		if(!wu.isPresent()){
			return 0;
		}
		WsUser wsu=wu.get();
		Optional<WsPhone> wp=wsPhoneDao.selectByUserId(wsu.getUserid());
		if(!wp.isPresent()){
			return 0;
		}
		WsPhone wsphone=wp.get();
		Optional<AgClient> aclient=clientDao.selectById(ac.getCustomerID());
		if (!aclient.isPresent()){
			return 0;
		}
		AgClient agc=aclient.get();
		Optional<AgAccount> aga=accountDao.selectByClient(agc.getClientID());
		if(!aga.isPresent()){
			return 0;
		}
		AgAccount acc=aga.get();
		wsPhoneDao.del(wsphone.getId());
		wsUserDao.del(wsu.getId());
		accountDao.del(acc.getId());
		clientDao.del(agc.getId());
		wcDao.del(wcmp.getId());*/
		return wsDao.del(ac.getID());
	}

}
