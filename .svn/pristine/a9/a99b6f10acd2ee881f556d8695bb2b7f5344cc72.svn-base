package com.kafang.atgo.restful.util;

import java.io.UnsupportedEncodingException;
import java.security.SignatureException;

import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.lang.StringUtils;

public class Md5Encrypt {

	public static final String MDF_CHARSET_UTF_8 = "UTF-8";

//	public static void main(String[] args) {
//		log.info("MD5:" + DigestUtils.md5Hex(getContentBytes("123456", MDF_CHARSET_UTF_8)));
//		log.info("SHA1:" + DigestUtils.sha1Hex(getContentBytes("zwz", MDF_CHARSET_UTF_8)));
//
//	}

	/**
	 * MD5签名字符串
	 * 
	 * @param text
	 *            需要签名的字符串
	 * @param key
	 *            密钥
	 * @param input_charset
	 *            编码格式
	 * @return 签名结果
	 */
	public static String sign(String text, String key, String input_charset) {
		text = text + key;
		if (StringUtils.isBlank(input_charset)) {
			input_charset = "UTF-8";
		}
		return DigestUtils.md5Hex(getContentBytes(text, input_charset));
	}

	/**
	 * SHA1签名字符串
	 * 
	 * @param text
	 *            需要签名的字符串
	 * @param key
	 *            密钥
	 * @param input_charset
	 *            编码格式
	 * @return 签名结果
	 */
	public static String sha1Sign(String text, String input_charset) {
		if (StringUtils.isBlank(input_charset)) {
			input_charset = "UTF-8";
		}
		return DigestUtils.sha1Hex(getContentBytes(text, input_charset));
	}

	/**
	 * 签名字符串
	 * 
	 * @param text
	 *            需要签名的字符串
	 * @param sign
	 *            签名结果
	 * @param key
	 *            密钥
	 * @param input_charset
	 *            编码格式
	 * @return 签名结果
	 */
	public static boolean md5Verify(String text, String sign, String key, String input_charset) {
		text = text + key;
		if (StringUtils.isBlank(input_charset)) {
			input_charset = "UTF-8";
		}
		String mysign = DigestUtils.md5Hex(getContentBytes(text, input_charset));
		if (mysign.equals(sign)) {
			return true;
		} else {
			return false;
		}
	}

	/**
	 * @param content
	 * @param charset
	 * @return
	 * @throws SignatureException
	 * @throws UnsupportedEncodingException
	 */
	public static byte[] getContentBytes(String content, String charset) {
		if (charset == null || "".equals(charset)) {
			return content.getBytes();
		}
		try {
			return content.getBytes(charset);
		} catch (UnsupportedEncodingException e) {
			throw new RuntimeException("签名过程中出现错误,指定的编码集不对,您目前指定的编码集是:" + charset);
		}
	}
}
