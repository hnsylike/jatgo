package com.kafang.atgo.restful.filter;

import com.kafang.atgo.AtgoErrorCode;
import com.kafang.atgo.AtgoException;
import com.kafang.atgo.restful.dto.rep.ResponseTemplate;
import com.kafang.atgo.restful.util.HttpStatusConvert;
import lombok.extern.slf4j.Slf4j;

import javax.ws.rs.core.Response;
import javax.ws.rs.ext.ExceptionMapper;
import javax.ws.rs.ext.Provider;

/**
 * @author like
 * @description 自定义异常统一处理
 * @data 2018/9/29
 */
@Slf4j
@Provider
public class AtgoExceptionMapper implements ExceptionMapper<AtgoException> {

    @Override
    public Response toResponse(AtgoException e) {
        log.error("{}", e);
        ResponseTemplate responseTemplate = null;
        AtgoErrorCode atgoErrorCode = e.getAtgoErrorCode();
        String errorMessage = e.getErrorMessage();
        if(atgoErrorCode != null) {
            responseTemplate = new ResponseTemplate
                    .Builder(HttpStatusConvert.fromCode(atgoErrorCode.getHttpStatusCode()))
                    .code(atgoErrorCode.getErrorCode())
                    .errorMsg(errorMessage)
                    .build();
        }else {
            responseTemplate = ResponseTemplate.failed(null,e.getMessage());
        }
        return Response.ok().entity(responseTemplate).build();
    }
}
