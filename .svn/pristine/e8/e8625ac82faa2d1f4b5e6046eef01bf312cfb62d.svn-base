/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.kafang.atgo.memory.avro.record;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Status extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2990286459549095398L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Status\",\"namespace\":\"com.kafang.atgo.memory.avro.record\",\"fields\":[{\"name\":\"clientId\",\"type\":\"int\"},{\"name\":\"accountId\",\"type\":\"int\"},{\"name\":\"moduleStatus\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Status> ENCODER =
      new BinaryMessageEncoder<Status>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Status> DECODER =
      new BinaryMessageDecoder<Status>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Status> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Status> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Status>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Status to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Status from a ByteBuffer. */
  public static Status fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private int clientId;
   private int accountId;
   private int moduleStatus;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Status() {}

  /**
   * All-args constructor.
   * @param clientId The new value for clientId
   * @param accountId The new value for accountId
   * @param moduleStatus The new value for moduleStatus
   */
  public Status(java.lang.Integer clientId, java.lang.Integer accountId, java.lang.Integer moduleStatus) {
    this.clientId = clientId;
    this.accountId = accountId;
    this.moduleStatus = moduleStatus;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return clientId;
    case 1: return accountId;
    case 2: return moduleStatus;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: clientId = (java.lang.Integer)value$; break;
    case 1: accountId = (java.lang.Integer)value$; break;
    case 2: moduleStatus = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'clientId' field.
   * @return The value of the 'clientId' field.
   */
  public java.lang.Integer getClientId() {
    return clientId;
  }

  /**
   * Sets the value of the 'clientId' field.
   * @param value the value to set.
   */
  public com.kafang.atgo.memory.avro.record.Status setClientId(java.lang.Integer value) {
    this.clientId = value;
	return this;
  }

  /**
   * Gets the value of the 'accountId' field.
   * @return The value of the 'accountId' field.
   */
  public java.lang.Integer getAccountId() {
    return accountId;
  }

  /**
   * Sets the value of the 'accountId' field.
   * @param value the value to set.
   */
  public com.kafang.atgo.memory.avro.record.Status setAccountId(java.lang.Integer value) {
    this.accountId = value;
	return this;
  }

  /**
   * Gets the value of the 'moduleStatus' field.
   * @return The value of the 'moduleStatus' field.
   */
  public java.lang.Integer getModuleStatus() {
    return moduleStatus;
  }

  /**
   * Sets the value of the 'moduleStatus' field.
   * @param value the value to set.
   */
  public com.kafang.atgo.memory.avro.record.Status setModuleStatus(java.lang.Integer value) {
    this.moduleStatus = value;
	return this;
  }

  /**
   * Creates a new Status RecordBuilder.
   * @return A new Status RecordBuilder
   */
  public static com.kafang.atgo.memory.avro.record.Status.Builder newBuilder() {
    return new com.kafang.atgo.memory.avro.record.Status.Builder();
  }

  /**
   * Creates a new Status RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Status RecordBuilder
   */
  public static com.kafang.atgo.memory.avro.record.Status.Builder newBuilder(com.kafang.atgo.memory.avro.record.Status.Builder other) {
    return new com.kafang.atgo.memory.avro.record.Status.Builder(other);
  }

  /**
   * Creates a new Status RecordBuilder by copying an existing Status instance.
   * @param other The existing instance to copy.
   * @return A new Status RecordBuilder
   */
  public static com.kafang.atgo.memory.avro.record.Status.Builder newBuilder(com.kafang.atgo.memory.avro.record.Status other) {
    return new com.kafang.atgo.memory.avro.record.Status.Builder(other);
  }

  /**
   * RecordBuilder for Status instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Status>
    implements org.apache.avro.data.RecordBuilder<Status> {

    private int clientId;
    private int accountId;
    private int moduleStatus;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.kafang.atgo.memory.avro.record.Status.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.clientId)) {
        this.clientId = data().deepCopy(fields()[0].schema(), other.clientId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.accountId)) {
        this.accountId = data().deepCopy(fields()[1].schema(), other.accountId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.moduleStatus)) {
        this.moduleStatus = data().deepCopy(fields()[2].schema(), other.moduleStatus);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Status instance
     * @param other The existing instance to copy.
     */
    private Builder(com.kafang.atgo.memory.avro.record.Status other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.clientId)) {
        this.clientId = data().deepCopy(fields()[0].schema(), other.clientId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.accountId)) {
        this.accountId = data().deepCopy(fields()[1].schema(), other.accountId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.moduleStatus)) {
        this.moduleStatus = data().deepCopy(fields()[2].schema(), other.moduleStatus);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'clientId' field.
      * @return The value.
      */
    public java.lang.Integer getClientId() {
      return clientId;
    }

    /**
      * Sets the value of the 'clientId' field.
      * @param value The value of 'clientId'.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.Status.Builder setClientId(int value) {
      validate(fields()[0], value);
      this.clientId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'clientId' field has been set.
      * @return True if the 'clientId' field has been set, false otherwise.
      */
    public boolean hasClientId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'clientId' field.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.Status.Builder clearClientId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'accountId' field.
      * @return The value.
      */
    public java.lang.Integer getAccountId() {
      return accountId;
    }

    /**
      * Sets the value of the 'accountId' field.
      * @param value The value of 'accountId'.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.Status.Builder setAccountId(int value) {
      validate(fields()[1], value);
      this.accountId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'accountId' field has been set.
      * @return True if the 'accountId' field has been set, false otherwise.
      */
    public boolean hasAccountId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'accountId' field.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.Status.Builder clearAccountId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'moduleStatus' field.
      * @return The value.
      */
    public java.lang.Integer getModuleStatus() {
      return moduleStatus;
    }

    /**
      * Sets the value of the 'moduleStatus' field.
      * @param value The value of 'moduleStatus'.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.Status.Builder setModuleStatus(int value) {
      validate(fields()[2], value);
      this.moduleStatus = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'moduleStatus' field has been set.
      * @return True if the 'moduleStatus' field has been set, false otherwise.
      */
    public boolean hasModuleStatus() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'moduleStatus' field.
      * @return This builder.
      */
    public com.kafang.atgo.memory.avro.record.Status.Builder clearModuleStatus() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Status build() {
      try {
        Status record = new Status();
        record.clientId = fieldSetFlags()[0] ? this.clientId : (java.lang.Integer) defaultValue(fields()[0]);
        record.accountId = fieldSetFlags()[1] ? this.accountId : (java.lang.Integer) defaultValue(fields()[1]);
        record.moduleStatus = fieldSetFlags()[2] ? this.moduleStatus : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Status>
    WRITER$ = (org.apache.avro.io.DatumWriter<Status>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Status>
    READER$ = (org.apache.avro.io.DatumReader<Status>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
